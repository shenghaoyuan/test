/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml -verbose -d reachability -I . -I includes -tmpdir /home/shyuan/2-FMCAD2021/riotboot/out/sources -no-prefix FStarFiles /home/shyuan/2-FMCAD2021/riotboot/out/out.krml -ccopt -O0 mymain.c -add-include "kremlin/internal/compat.h" -bundle LowStar.*,Prims -bundle FStar.* -o /home/shyuan/2-FMCAD2021/riotboot/out/main
  F* version: <unknown>
  KreMLin version: 03ccd42f
 */

#ifndef __Slot_H
#define __Slot_H
#include "kremlin/internal/compat.h"
#include "kremlib.h"


#include "Hdr.h"
#include "LowStar_Prims.h"
#include "Riotboot.h"
#include "FStar.h"

bool Slot_riotboot_slot_validate(Riotboot_hdr_t slot);

#define FStar_Pervasives_Native_None 0
#define FStar_Pervasives_Native_Some 1

typedef uint8_t FStar_Pervasives_Native_option__Riotboot_hdr_t_tags;

typedef struct FStar_Pervasives_Native_option__Riotboot_hdr_t_s
{
  FStar_Pervasives_Native_option__Riotboot_hdr_t_tags tag;
  Riotboot_hdr_t v;
}
FStar_Pervasives_Native_option__Riotboot_hdr_t;

FStar_Pervasives_Native_option__Riotboot_hdr_t
Slot_choose_image_aux(
  Prims_int hdrs_len,
  Riotboot_hdr_t *hdrs,
  Prims_int index,
  FStar_Pervasives_Native_option__Riotboot_hdr_t opt
);

typedef struct FStar_Pervasives_Native_option__uint32_t_s
{
  FStar_Pervasives_Native_option__Riotboot_hdr_t_tags tag;
  uint32_t v;
}
FStar_Pervasives_Native_option__uint32_t;

FStar_Pervasives_Native_option__uint32_t
Slot_choose_image(Prims_int hdrs_len, Riotboot_hdr_t *hdrs);


#define __Slot_H_DEFINED
#endif
